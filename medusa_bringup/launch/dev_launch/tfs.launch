<?xml version="1.0"?>
<launch>

    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}]: ${node}: ${message}"/>
    
    <!-- Parameters and Arguments -->
    <arg name="name"            /> <!-- Name of the vehicle being launched -->   
    <arg name="config_package"  /> <!-- Name of the package where the configuration files are stored -->
    <arg name="folder"             default="simulation" />  <!-- Name of the folder for the configuration files -->     
    
    <arg name="real"                default="false"/>   
    <arg name="multi"               default="false"/>

    <arg if="$(eval arg('multi'))" name="tf_name" value="$(arg name)_"/>
    <arg unless="$(eval arg('multi'))" name="tf_name" value=""/>

    <arg name="pi2" value="1.57079632679" />
    <arg name="pi" 	value="3.14159265359" />

    <group ns="tfs/broadcaster">
        <group if="$(arg real)">
            <!-- MRED TFS -->
            <group if="$(eval name=='mred')">
                <node pkg="tf2_ros" type="static_transform_publisher" name="gnss" args="-0.2735 0 -0.39 0 0 0 base_link gnss"/>
                <!-- Pointing Down - Surface Vehicle -->
                <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="usbl" args="0 0 0 -0.7854 0 0 base_link usbl"/>-->
                <!-- Pointing Up - Underwater Vehicle -->
                <node pkg="tf2_ros" type="static_transform_publisher" name="usbl" args="0 0 0 0.7854 0 $(arg pi) base_link usbl"/>
                <node pkg="tf2_ros" type="static_transform_publisher" name="dvlb" args="0.485 0 0.39 0.052359878 0 0 base_link dvl_bt" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="dvlw" args="0.485 0 0.39 0.052359878 0 0 base_link dvl_wt" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="ahrs" args="0 0 0 0 0 0 1 base_link ahrs" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="imun" args="0 0 0 0 0 0 1 base_link imu_noisy" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="dept" args="0 0 0 0 0 0 1 base_link depth" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="alti" args="0 0 0 0 0 0 base_link altimeter" />
            </group>

            <!-- MBLACK TFS -->
            <group if="$(eval name=='mblack')">
                <node pkg="tf2_ros" type="static_transform_publisher" name="gnss" args="-0.2735 0 -0.39 0 0 0 base_link gnss"/>
                <!-- Pointing Down - Surface Vehicle -->
                <node pkg="tf2_ros" type="static_transform_publisher" name="usbl" args="0 0 0 -0.7854 0 0 base_link usbl"/>
                <!-- Pointing Up - Underwater Vehicle -->
                <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="usbl" args="0 0 0 0.7854 0 $(arg pi) base_link usbl"/> -->
                <node pkg="tf2_ros" type="static_transform_publisher" name="dvlb" args="0.485 0 0.39 0.052359878 0 0 base_link dvl_bt" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="dvlw" args="0.485 0 0.39 0.052359878 0 0 base_link dvl_wt" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="ahrs" args="0 0 0 0 0 0 1 base_link ahrs" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="imun" args="0 0 0 0 0 0 1 base_link imu_noisy" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="dept" args="0 0 0 0 0 0 1 base_link depth" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="alti" args="0 0 0 0 $(arg pi2) 0 base_link altimeter" />
            </group>

            <!-- MYELLOW TFS -->
            <group if="$(eval name=='myellow')">
                <node pkg="tf2_ros" type="static_transform_publisher" name="gnss" args="-0.2735 0 -0.39 0 0 0 base_link gnss"/>
                <!-- Pointing Down - Surface Vehicle -->
                <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="usbl" args="0 0 0 -0.7854 0 0 base_link usbl"/>-->
                <!-- Pointing Up - Underwater Vehicle -->
                <node pkg="tf2_ros" type="static_transform_publisher" name="usbl" args="0 0 0 0.7854 0 $(arg pi) base_link usbl"/>
                <node pkg="tf2_ros" type="static_transform_publisher" name="dvlb" args="0.485 0 0.39 0.052359878 0 0 base_link dvl_bt" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="dvlw" args="0.485 0 0.39 0.052359878 0 0 base_link dvl_wt" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="ahrs" args="0 0 0 0 0 0 1 base_link ahrs" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="imun" args="0 0 0 0 0 0 1 base_link imu_noisy" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="dept" args="0 0 0 0 0 0 1 base_link depth" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="alti" args="0 0 0 0 $(arg pi2) 0 base_link altimeter" />
            </group>

            <!-- MVECTOR TFS -->
            <group if="$(eval name=='mvector')">
                <node pkg="tf2_ros" type="static_transform_publisher" name="gnss" args="-0.2735 0 -0.39 0 0 0 base_link gnss"/>
                <!-- Pointing Down - Surface Vehicle -->
                <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="usbl" args="0 0 0 -0.7854 0 0 base_link usbl"/>-->
                <!-- Pointing Up - Underwater Vehicle -->
                <node pkg="tf2_ros" type="static_transform_publisher" name="usbl" args="0 0 0 0.7854 0 $(arg pi) base_link usbl"/>
                <node pkg="tf2_ros" type="static_transform_publisher" name="dvlb" args="0.485 0 0.39 0.052359878 0 0 base_link dvl_bt" />
                <!--<node pkg="tf2_ros" type="static_transform_publisher" name="dvlb" args="0.485 0 0.39 0.052359878 0 0 base_link dvl_bt" />-->
                <node pkg="tf2_ros" type="static_transform_publisher" name="dvlw" args="0.485 0 0.39 0.052359878 0 0 base_link dvl_wt" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="ahrs" args="0 0 0 0 0 0 1 base_link ahrs" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="imun" args="0 0 0 0 0 0 1 base_link imu_noisy" />
                <node pkg="tf2_ros" type="static_transform_publisher" name="dept" args="0 0 0 0 0 0 1 base_link depth" />
                <!--<node pkg="tf2_ros" type="static_transform_publisher" name="alti" args="0 0 0 0 $(arg pi2) 0 base_link altimeter" />-->
                <node pkg="tf2_ros" type="static_transform_publisher" name="alti" args="0 0 0 0 0 0 base_link altimeter" />
            </group>
        </group>

        <!-- SIMULATED TFS -->
        <group unless="$(arg real)">
          <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg tf_name)gnss" args="0 0 0 0 0 0 1 $(arg tf_name)base_link $(arg tf_name)gnss"/>
          <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg tf_name)usbl" args="0 0 0 0 0 0 1 $(arg tf_name)base_link $(arg tf_name)usbl"/>
          <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg tf_name)dvlb" args="0 0 0 0 0 0 1 $(arg tf_name)base_link $(arg tf_name)dvl_bt" />
            <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg tf_name)dvlw" args="0 0 0 0 0 0 1 $(arg tf_name)base_link $(arg tf_name)dvl_wt" />
            <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg tf_name)ahrs" args="0 0 0 0 0 0 1 $(arg tf_name)base_link $(arg tf_name)ahrs" />
            <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg tf_name)imun" args="0 0 0 0 0 0 1 $(arg tf_name)base_link $(arg tf_name)imu_noisy" />
            <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg tf_name)dept" args="0 0 0 0 0 0 1 $(arg tf_name)base_link $(arg tf_name)depth" />
            <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg tf_name)rang" args="0 0 0 0 0 0 1 $(arg tf_name)base_link $(arg tf_name)range" />
            <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg tf_name)alti" args="0 0 0 0 0 0 1 $(arg tf_name)base_link $(arg tf_name)altimeter" />
        </group>
    </group>

</launch>
